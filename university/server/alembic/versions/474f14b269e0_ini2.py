"""ini2

Revision ID: 474f14b269e0
Revises: 6b1fa7dbd387
Create Date: 2024-11-06 13:19:10.187820

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '474f14b269e0'
down_revision = '6b1fa7dbd387'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('instructors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('birth_date', sa.DateTime(), nullable=True),
    sa.Column('employ_date', sa.DateTime(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('department')
    op.drop_table('instructor')
    op.drop_index('ix_professors_name', table_name='professors')
    op.drop_table('professors')
    op.drop_table('subject')
    op.drop_table('association_table')
    op.add_column('groups', sa.Column('id', sa.Integer(), nullable=False))
    op.alter_column('groups', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint('groups_instructor_id_fkey', 'groups', type_='foreignkey')
    op.drop_constraint('groups_professor_id_fkey', 'groups', type_='foreignkey')
    op.create_foreign_key(None, 'groups', 'instructors', ['instructor_id'], ['id'])
    op.drop_column('groups', 'professor_id')
    op.drop_column('groups', 'id_group')
    op.add_column('students', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('students', sa.Column('department_id', sa.Integer(), nullable=True))
    op.drop_constraint('students_group_id_fkey', 'students', type_='foreignkey')
    op.drop_constraint('students_department_name_fkey', 'students', type_='foreignkey')
    op.create_foreign_key(None, 'students', 'groups', ['group_id'], ['id'])
    op.create_foreign_key(None, 'students', 'departments', ['department_id'], ['id'])
    op.drop_column('students', 'department_name')
    op.drop_column('students', 'id_student')
    op.drop_column('students', 'photo')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('students', sa.Column('photo', postgresql.BYTEA(), autoincrement=False, nullable=True))
    op.add_column('students', sa.Column('id_student', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('students', sa.Column('department_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.create_foreign_key('students_department_name_fkey', 'students', 'department', ['department_name'], ['name'])
    op.create_foreign_key('students_group_id_fkey', 'students', 'groups', ['group_id'], ['id_group'])
    op.drop_column('students', 'department_id')
    op.drop_column('students', 'id')
    op.add_column('groups', sa.Column('id_group', sa.INTEGER(), server_default=sa.text("nextval('groups_id_group_seq'::regclass)"), autoincrement=True, nullable=False))
    op.add_column('groups', sa.Column('professor_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'groups', type_='foreignkey')
    op.create_foreign_key('groups_professor_id_fkey', 'groups', 'professors', ['professor_id'], ['id_professor'])
    op.create_foreign_key('groups_instructor_id_fkey', 'groups', 'instructor', ['instructor_id'], ['id_instructor'])
    op.alter_column('groups', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('groups', 'id')
    op.create_table('association_table',
    sa.Column('left_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('right_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['left_id'], ['students.id_student'], name='association_table_left_id_fkey'),
    sa.ForeignKeyConstraint(['right_id'], ['subject.id_subject'], name='association_table_right_id_fkey')
    )
    op.create_table('subject',
    sa.Column('id_subject', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('department_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['department_name'], ['department.name'], name='subject_department_name_fkey'),
    sa.PrimaryKeyConstraint('id_subject', name='subject_pkey')
    )
    op.create_table('professors',
    sa.Column('id_professor', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('department_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['department_name'], ['department.name'], name='professors_department_name_fkey'),
    sa.PrimaryKeyConstraint('id_professor', name='professors_pkey')
    )
    op.create_index('ix_professors_name', 'professors', ['name'], unique=False)
    op.create_table('instructor',
    sa.Column('id_instructor', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('birth_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('employ_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('photo', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('department_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['department_name'], ['department.name'], name='instructor_department_name_fkey'),
    sa.PrimaryKeyConstraint('id_instructor', name='instructor_pkey')
    )
    op.create_table('department',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('name', name='department_pkey')
    )
    op.drop_table('instructors')
    op.drop_table('subjects')
    op.drop_table('departments')
    # ### end Alembic commands ###
